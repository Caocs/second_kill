# 静态资源处理
# 启用静态资源处理（默认开启）
spring.web.resources.add-mappings=true
# 缓存相应时间：秒
spring.web.resources.cache.cachecontrol.max-age=3600
# 启用资源链缓存（默认开启）
spring.web.resources.chain.cache=true
# 启用资源链（默认禁用）
spring.web.resources.chain.enabled=true
# 启用压缩资源（gzip、brotli）解析，默认禁用
spring.web.resources.chain.compressed=true
spring.web.resources.static-locations=classpath:/static/
# thymeleaf配置，关闭缓存
spring.thymeleaf.cache=false
# 数据源配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/SecondKill?useUnicode=true&characterEncoding=UTF-8&serverTimeZone=Asia/shanghai
spring.datasource.username=root
spring.datasource.password=admin
# 连接池名称
spring.datasource.hikari.pool-name=DateHikariCP
# 最小空闲连接数
spring.datasource.hikari.minimum-idle=5
# 空闲连接存活最大时间，默认600000(10分钟)
spring.datasource.hikari.idle-timeout=1800000
# 最大连接数，默认10
spring.datasource.hikari.maximum-pool-size=10
# 从连接池返回的连接自动提交
spring.datasource.hikari.auto-commit=true
# 连接最大存活时间，0表示永久存活，默认1800000(30分钟)
spring.datasource.hikari.max-lifetime=1800000
# 连接超时时间，默认30000(30秒)
spring.datasource.hikari.connection-timeout=30000
# 测试连接是否可用的查询语句
spring.datasource.hikari.connection-test-query=SELECT 1
# redis相关配置
spring.redis.host=localhost
spring.redis.port=6379
# 默认操作0库
spring.redis.database=0
# 超时时间
spring.redis.timeout=10000ms
#密码，默认为空，本地没有设置密码，所以这里不填写
spring.redis.password=
#连接池最大的连接数，若使用负值表示没有限制
spring.redis.jedis.pool.max-active=8
#连接池最大阻塞等待时间，若使用负值表示没有限制
spring.redis.jedis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
#最大连接数，默认8
# spring.redis.lettuce.pool.max-active=8
#最大连接阻塞等待时间，默认-1
# spring.redis.lettuce.pool.max-wait=10000ms
# 最大空闲连接，默认8
# spring.redis.lettuce.pool.max-idle=200
# 最小空闲连接，默认0
# spring.redis.lettuce.pool.min-idle=5
#RabbitMQ相关配置
spring.rabbitmq.host=192.168.18.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
#虚拟主机
spring.rabbitmq.virtual-host=/
#消费者最小数量
spring.rabbitmq.listener.simple.concurrency=10
#消费者最大数量
spring.rabbitmq.listener.simple.max-concurrency=10
#限制消费者每次只能处理一条消息，处理完再继续下一条消息
spring.rabbitmq.listener.simple.prefetch=1
#启动时是否默认启动容器，默认true
spring.rabbitmq.listener.simple.auto-startup=true
#被拒绝时重新进入队列
spring.rabbitmq.listener.simple.default-requeue-rejected=true
#发布重试，默认false
spring.rabbitmq.template.retry.enabled=true
#重试时间，默认1000ms
spring.rabbitmq.template.retry.initial-interval=1000ms
#重试最大次数，默认3次
spring.rabbitmq.template.retry.max-attempts=3
#重试最大间隔时间，默认10000ms
spring.rabbitmq.template.retry.max-interval=10000ms
#重试的间隔乘数，比如2.0的，第一次10s，第二次20s，第三次40s
spring.rabbitmq.template.retry.multiplier=1
# 发布消息成功到交换机后会出发回调方法
spring.rabbitmq.publisher-confirm-type=correlated
# 当消息无法发送时退回
spring.rabbitmq.publisher-returns=true
# Mybatis-plus配置
# 把mapper配置放在resource/mapper文件夹下
mybatis-plus.mapper-locations=classpath*:/mapper/*Mapper.xml
# 配置Mybatis数据返回类型别名（默认别名是类名）
mybatis-plus.type-aliases-package=com.java.ccs.secondkill.pojo
# Mybatis的SQL打印（方法接口所在的包，不是Mapper.xml所在的包）
logging.level.com.java.ccs.secondkill.mapper:debug
